{"version":3,"sources":["components/Header.jsx","components/Sort.jsx","components/Employee.jsx","App.js","index.js"],"names":["Header","useSortableData","employees","config","React","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","Employee","props","value","setValue","type","autoComplete","placeholder","onChange","event","target","onClick","filter","item","title","toLowerCase","includes","first_name","last_name","email","phone","map","emp","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKASeA,MANf,WACI,OACQ,qD,cCgCGC,EAnCS,SAACC,GAA8B,IAAnBC,EAAkB,uDAAT,KAAS,EACdC,IAAMC,SAASF,GADD,mBAC3CG,EAD2C,KAC/BC,EAD+B,KAI5CC,EAAcJ,IAAMK,SAAQ,WAC9B,IAAIC,EAAa,YAAOR,GAYxB,OAXmB,OAAfI,GACAI,EAAcC,MAAK,SAACC,EAAGC,GACnB,OAAID,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KACD,cAAzBR,EAAWS,WAA6B,EAAI,EAEnDH,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KACD,cAAzBR,EAAWS,UAA4B,GAAK,EAEhD,KAGRL,IACR,CAACR,EAAWI,IAETK,EAAO,SAACG,GACV,IAAIC,EAAY,YAEZT,GACAA,EAAWQ,MAAQA,GACM,cAAzBR,EAAWS,YAEXA,EAAY,cAEhBR,EAAc,CAAEO,MAAKC,eAGzB,MAAO,CAAEb,UAAWM,EAAaG,OAAML,eCsD5BU,EApFE,SAACC,GAAW,IAAD,EACEZ,mBAAS,IADX,mBACjBa,EADiB,KACVC,EADU,OAEIlB,EAAgBgB,EAAMf,WAA1CA,EAFgB,EAEhBA,UAAWS,EAFK,EAELA,KAEnB,OACI,qCACI,uBACIS,KAAK,OACLC,aAAa,MACbC,YAAY,SACZJ,MAAOA,EACPK,SAAU,SAAAC,GAAK,OAAIL,EAASK,EAAMC,OAAOP,UAE7C,kCACI,gCACI,+BAEI,6BACI,wBACIE,KAAK,SACLM,QAAS,kBAAMf,EAAK,eAFxB,0BAMJ,6BACI,wBACIS,KAAK,SACLM,QAAS,kBAAMf,EAAK,cAFxB,yBAMJ,6BACI,wBACIS,KAAK,SACLM,QAAS,kBAAMf,EAAK,UAFxB,qBAMJ,6BACI,wBACIS,KAAK,SACLM,QAAS,kBAAMf,EAAK,UAFxB,qBAMJ,6BACI,wBACIS,KAAK,SACLM,QAAS,kBAAMf,EAAK,UAFxB,iCAOZ,gCAEQT,EACKyB,QAAO,SAAAC,GACJ,OAAKV,MACDU,EAAKC,MAAMC,cAAcC,SAASb,EAAMY,gBACrCF,EAAKI,WAAWF,cAAcC,SAASb,EAAMY,gBAC7CF,EAAKK,UAAUH,cAAcC,SAASb,EAAMY,gBAC5CF,EAAKM,MAAMJ,cAAcC,SAASb,EAAMY,gBACxCF,EAAKO,MAAML,cAAcC,SAASb,EAAMY,mBAMlDM,KAAI,SAACC,GAAD,OACD,+BACI,6BAAKA,EAAIL,aACT,6BAAKK,EAAIJ,YACT,6BAAKI,EAAIR,QACT,6BAAKQ,EAAIH,QACT,6BAAKG,EAAIF,UALJE,EAAIC,gB,OCnE9B,SAASC,IACtB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUrC,UAAcA,OCL9BsC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACH,EAAD,MAEJI,SAASC,eAAe,U","file":"static/js/main.7596e4ad.chunk.js","sourcesContent":["// imports\r\nimport React from 'react';\r\n\r\nfunction Header() {\r\n    return (  \r\n            <h1>Employee Directory</h1>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst useSortableData = (employees, config = null) => {\r\n    const [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n\r\n    const sortedItems = React.useMemo(() => {\r\n        let sortableItems = [...employees];\r\n        if (sortConfig !== null) {\r\n            sortableItems.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        return sortableItems;\r\n    }, [employees, sortConfig]);\r\n\r\n    const sort = (key) => {\r\n        let direction = 'ascending';\r\n        if (\r\n            sortConfig &&\r\n            sortConfig.key === key &&\r\n            sortConfig.direction === 'ascending'\r\n        ) {\r\n            direction = 'descending';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    return { employees: sortedItems, sort, sortConfig };\r\n};\r\n\r\nexport default useSortableData\r\n","// imports\r\nimport React, { useState } from 'react';\r\nimport useSortableData from \"./Sort\";\r\n\r\nconst Employee = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const { employees, sort } = useSortableData(props.employees);\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type='text'\r\n                autoComplete='off'\r\n                placeholder='Search'\r\n                value={value}\r\n                onChange={event => setValue(event.target.value)}\r\n            />\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {/* first name */}\r\n                        <th>\r\n                            <button\r\n                                type='button'\r\n                                onClick={() => sort('first_name')}\r\n                            >First Name</button>\r\n                        </th>\r\n                        {/* last name */}\r\n                        <th>\r\n                            <button\r\n                                type='button'\r\n                                onClick={() => sort('last_name')}\r\n                            >Last Name</button>\r\n                        </th>\r\n                        {/* title name */}\r\n                        <th>\r\n                            <button\r\n                                type='button'\r\n                                onClick={() => sort('title')}\r\n                            >Title</button>\r\n                        </th>\r\n                        {/* email */}\r\n                        <th>\r\n                            <button\r\n                                type='button'\r\n                                onClick={() => sort('email')}\r\n                            >Email</button>\r\n                        </th>\r\n                        {/* phone */}\r\n                        <th>\r\n                            <button\r\n                                type='button'\r\n                                onClick={() => sort('phone')}\r\n                            >Phone Number</button>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        employees\r\n                            .filter(item => {\r\n                                if (!value) return true;\r\n                                if (item.title.toLowerCase().includes(value.toLowerCase())\r\n                                    || item.first_name.toLowerCase().includes(value.toLowerCase())\r\n                                    || item.last_name.toLowerCase().includes(value.toLowerCase())\r\n                                    || item.email.toLowerCase().includes(value.toLowerCase())\r\n                                    || item.phone.toLowerCase().includes(value.toLowerCase())\r\n                                ) {\r\n                                    return true;\r\n                                }\r\n                                return false;\r\n                            })\r\n                            .map((emp) => (\r\n                                <tr key={emp.id}>\r\n                                    <td>{emp.first_name}</td>\r\n                                    <td>{emp.last_name}</td>\r\n                                    <td>{emp.title}</td>\r\n                                    <td>{emp.email}</td>\r\n                                    <td>{emp.phone}</td>\r\n                                </tr>\r\n                            ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Employee;","// imports\nimport React from 'react';\nimport Header from './components/Header.jsx';\nimport Employee from './components/Employee';\nimport employees from './employees.json';\n\nexport default function App() {\n  return(\n    <div>\n      <Header/>\n      <Employee employees = { employees } />\n    </div>\n  );\n}","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}